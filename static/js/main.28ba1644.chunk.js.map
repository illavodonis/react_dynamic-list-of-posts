{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectPost","selectedPostId","className","map","post","userId","title","type","onClick","id","request","url","method","a","fetch","response","json","Response","error","getUsers","users","getPostComments","postId","addComment","comment","headers","body","JSON","stringify","NewCommentForm","useState","name","setName","email","setEmail","setBody","onSubmit","ev","preventDefault","placeholder","value","onChange","target","disabled","PostDetails","comments","setComments","showComments","setshowComments","newComment","setNewComment","upLoadComents","commentsFromServer","useEffect","state","length","commentId","getUserPosts","endpoint","getUserPost","Loader","App","setUsers","setPosts","setPost","selectUserId","setSelectUserId","setselectedPostId","usersFromServer","loader","postsFromServer","postFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28ba1644.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[]\n  selectPost: (postId: number) => void\n  selectedPostId: number\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectPost,\n  selectedPostId,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul\n        className=\"PostsList__list\"\n        data-cy=\"postDetails\"\n      >\n        {\n          posts.map(post => (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                <p>{post.title}</p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  if (selectedPostId !== post.id || post === null) {\n                    selectPost(post.id);\n                  } else {\n                    selectPost(0);\n                  }\n                }}\n              >\n                {selectedPostId === post.id ? 'Close' : 'Open'}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = async (url: string, method?: RequestInit) => {\n  try {\n    const response = await fetch(`${BASE_URL}${url}`, method);\n\n    return await response.json();\n  } catch {\n    return Response.error();\n  }\n};\n\nexport const getUsers = (users: string): Promise<User[]> => {\n  return request(users);\n};\n","import { request } from './api';\n\nexport const getPostComments = (postId: number): Promise<Comments[]> => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const deleteComment = (commentId: number) => {\n  return request(`/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addComment = async (comment: Comments) => {\n  return request(\n    '/comments',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify(comment),\n    },\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  addComment: (name: string, email: string, body: string) => void\n}\nexport const NewCommentForm: React.FC<Props> = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const fieldsCleaner = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(ev) => {\n        ev.preventDefault();\n        addComment(name, email, body);\n        fieldsCleaner();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(ev) => setName(ev.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(ev) => setEmail(ev.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(ev) => setBody(ev.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        disabled={!name && !email && !body}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addComment, deleteComment, getPostComments } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  post: Post\n}\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [comments, setComments] = useState<Comments[]>([]);\n  const [showComments, setshowComments] = useState(false);\n  const [newComment, setNewComment] = useState<Comments | null>(null);\n\n  const addCommentToList = (name:string, email:string, body:string) => {\n    const comment:Comments = {\n      id: comments.length + 1,\n      postId: post.id,\n      name,\n      email,\n      body,\n    };\n\n    setNewComment(comment);\n  };\n\n  const upLoadComents = async (postId: number) => {\n    const commentsFromServer = await getPostComments(postId);\n\n    setComments(commentsFromServer);\n  };\n\n  useEffect(() => {\n    upLoadComents(+post.id);\n  }, [comments]);\n\n  useEffect(() => {\n    if (newComment) {\n      addComment(newComment);\n    }\n  }, [newComment]);\n\n  return (\n    <div className=\"PostDetails\" data-cy=\"postDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setshowComments(state => !state);\n          }}\n        >\n          {\n            showComments\n              ? `Hide ${comments.length} comments`\n              : `Show ${comments.length} comments`\n          }\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {showComments && (\n            comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))\n          )}\n        </ul>\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addCommentToList} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUserPosts = (endpoint: string): Promise<Post[]> => {\n  return request(endpoint);\n};\n\nexport const getUserPost = (endpoint: string): Promise<Post> => {\n  return request(endpoint);\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/api';\nimport { getUserPost, getUserPosts } from './api/posts';\nimport { Loader } from './components/Loader';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [post, setPost] = useState<Post | null>(null);\n  const [selectUserId, setSelectUserId] = useState(0);\n  const [selectedPostId, setselectedPostId] = useState(0);\n\n  const selectPost = (postId: number) => {\n    setselectedPostId(postId);\n  };\n\n  useEffect(() => {\n    async function loader(endpoint: string) {\n      const usersFromServer = await getUsers(endpoint);\n\n      setUsers(usersFromServer);\n    }\n\n    loader('/users');\n  }, []);\n\n  useEffect(() => {\n    async function loader(endpoint: string) {\n      const postsFromServer = await getUserPosts(endpoint);\n\n      setPosts(postsFromServer);\n    }\n\n    if (!selectUserId) {\n      loader('/posts');\n    } else {\n      loader(`/posts?userId=${selectUserId}`);\n    }\n  }, [selectUserId]);\n\n  useEffect(() => {\n    async function loader(endpoint: string) {\n      const postFromServer = await getUserPost(endpoint);\n\n      setPost(postFromServer);\n    }\n\n    if (selectedPostId) {\n      loader(`/posts/${selectedPostId}`);\n    } else {\n      setPost(null);\n    }\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(ev) => setSelectUserId(+ev.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                value={`${user.id}`}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {posts\n            ? (\n              <PostsList\n                posts={posts}\n                selectPost={selectPost}\n                selectedPostId={selectedPostId}\n                data-cy=\"postDetails\"\n              />\n            )\n            : (<Loader />)}\n\n        </div>\n\n        <div className=\"App__content\">\n          {post && (\n\n            <PostDetails post={post} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}